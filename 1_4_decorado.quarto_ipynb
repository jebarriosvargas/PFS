{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Decorado (Motif)\n",
        "\n",
        "::: {.callout-note appearance=\"simple\" icon=false collapse=\"false\"}\n",
        "## Decorado (definición)\n",
        ":::{.justify}\n",
        "La descripción de los objetos en una celda unitaria respecto a los puntos de referencia en una celda se conocen como decorado (motif).\n",
        ":::\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "::: {.callout-note appearance=\"simple\" icon=false collapse=\"false\"}\n",
        "## Estructura cristalina\n",
        "Una estructura cristalina se compone de una red y un decorado.\n",
        ":::\n",
        "\n",
        "Ejemplo: Panal de abeja\n",
        "\n",
        "$$\n",
        "\\text{sitio 1: }\\frac{1}{3}\\vec{a}_1 + \\frac{1}{3}\\vec{a}_2\\quad\n",
        "\\text{sitio 2: }\\frac{2}{3}\\vec{a}_1 + \\frac{2}{3}\\vec{a}_2\n",
        "$$\n",
        "\n",
        "donde \n",
        "\n",
        "$$\n",
        "\\vec{a}_1=\\left[\\begin{array}{c}1\\\\0\\end{array} \\right] \\quad \\text{y} \\quad \\vec{a}_2=\\left[\\begin{array}{c}\\cos(60^\\circ)\\\\\\sin(60^\\circ)\\end{array} \\right]\n",
        "$$\n"
      ],
      "id": "03e45c1b"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: fig-panaldeabeja\n",
        "#| fig-cap: Ejemplo de estructura cristalina de panal de abeja.\n",
        "\n",
        "from pylab import *\n",
        "def GenerarRed(n_1,n_2,a_1,a_2):\n",
        "  # -- Desarrollo técnico --\n",
        "  # Malla de enteros\n",
        "  N1,N2 = meshgrid(n_1,n_2)\n",
        "  # Cambiar a columnas\n",
        "  N1    = N1.flatten()\n",
        "  N2    = N2.flatten()\n",
        "  N1y2 = column_stack((N1,N2))\n",
        "  # Agrupar los vectores de red\n",
        "  avec = [a_1,a_2]\n",
        "\n",
        "  # Tomar todas las combinaciones\n",
        "  Rx,Ry = dot( N1y2,avec ).T\n",
        "  return Rx,Ry\n",
        "\n",
        "a_1 = [1,0]\n",
        "a_2 = [1/2,sqrt(3)/2]\n",
        "\n",
        "n_1 = arange(-4,4)\n",
        "n_2 = arange(-4,4)\n",
        "\n",
        "Rx,Ry = GenerarRed(n_1,n_2,a_1,a_2)\n",
        "\n",
        "sitio1x = Rx + (1/3)*( a_1[0]+a_2[0] )\n",
        "sitio1y = Ry + (1/3)*( a_1[1]+a_2[1] )\n",
        "\n",
        "sitio2x = Rx + (2/3)*( a_1[0]+a_2[0] )\n",
        "sitio2y = Ry + (2/3)*( a_1[1]+a_2[1] )\n",
        "\n",
        "import plotly.graph_objects as go\n",
        "\n",
        "Data = [go.Scatter(x=sitio1x,y=sitio1y,mode='markers',showlegend=False),\n",
        "        go.Scatter(x=sitio2x,y=sitio2y,mode='markers',showlegend=False)]\n",
        "\n",
        "fig = go.Figure(data=Data)\n",
        "fig.update_xaxes(range=[-2,2])\n",
        "fig.update_yaxes(range=[-2,2])\n",
        "fig.update_layout(width=400, height=400)\n",
        "fig.show()\n"
      ],
      "id": "fig-panaldeabeja",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/opt/anaconda3/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}